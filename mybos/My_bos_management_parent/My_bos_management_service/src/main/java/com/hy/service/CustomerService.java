
package com.hy.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CustomerService", targetNamespace = "http://service.hy.com/")
@XmlSeeAlso({
})
public interface CustomerService {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCustomerExistWithTel", targetNamespace = "http://service.hy.com/", className = "com.hy.service.FindCustomerExistWithTel")
    @ResponseWrapper(localName = "findCustomerExistWithTelResponse", targetNamespace = "http://service.hy.com/", className = "com.hy.service.FindCustomerExistWithTelResponse")
    public Boolean findCustomerExistWithTel(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "assignCustomers2FixedArea", targetNamespace = "http://service.hy.com/", className = "com.hy.service.AssignCustomers2FixedArea")
    @ResponseWrapper(localName = "assignCustomers2FixedAreaResponse", targetNamespace = "http://service.hy.com/", className = "com.hy.service.AssignCustomers2FixedAreaResponse")
    public void assignCustomers2FixedArea(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        List<Integer> arg1);

    /**
     * 
     * @return
     *     returns java.util.List<com.hy.service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://service.hy.com/", className = "com.hy.service.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://service.hy.com/", className = "com.hy.service.FindAllResponse")
    public List<Customer> findAll();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "save", targetNamespace = "http://service.hy.com/", className = "com.hy.service.Save")
    @ResponseWrapper(localName = "saveResponse", targetNamespace = "http://service.hy.com/", className = "com.hy.service.SaveResponse")
    public void save(
        @WebParam(name = "arg0", targetNamespace = "")
        Customer arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "activeCustomer", targetNamespace = "http://service.hy.com/", className = "com.hy.service.ActiveCustomer")
    @ResponseWrapper(localName = "activeCustomerResponse", targetNamespace = "http://service.hy.com/", className = "com.hy.service.ActiveCustomerResponse")
    public void activeCustomer(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByAddress", targetNamespace = "http://service.hy.com/", className = "com.hy.service.FindByAddress")
    @ResponseWrapper(localName = "findByAddressResponse", targetNamespace = "http://service.hy.com/", className = "com.hy.service.FindByAddressResponse")
    public String findByAddress(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns com.hy.service.Customer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://service.hy.com/", className = "com.hy.service.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://service.hy.com/", className = "com.hy.service.LoginResponse")
    public Customer login(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<com.hy.service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findHasAssociationByFixedAreaId", targetNamespace = "http://service.hy.com/", className = "com.hy.service.FindHasAssociationByFixedAreaId")
    @ResponseWrapper(localName = "findHasAssociationByFixedAreaIdResponse", targetNamespace = "http://service.hy.com/", className = "com.hy.service.FindHasAssociationByFixedAreaIdResponse")
    public List<Customer> findHasAssociationByFixedAreaId(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.util.List<com.hy.service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findNotAssociation", targetNamespace = "http://service.hy.com/", className = "com.hy.service.FindNotAssociation")
    @ResponseWrapper(localName = "findNotAssociationResponse", targetNamespace = "http://service.hy.com/", className = "com.hy.service.FindNotAssociationResponse")
    public List<Customer> findNotAssociation();

    /**
     * 
     * @param arg0
     * @return
     *     returns com.hy.service.Customer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCustomerWithTel", targetNamespace = "http://service.hy.com/", className = "com.hy.service.FindCustomerWithTel")
    @ResponseWrapper(localName = "findCustomerWithTelResponse", targetNamespace = "http://service.hy.com/", className = "com.hy.service.FindCustomerWithTelResponse")
    public Customer findCustomerWithTel(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
